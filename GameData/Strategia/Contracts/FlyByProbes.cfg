// Contract for flyby probes.
//   Author: nightingale

CONTRACT_TYPE
{
    name = STG_FlyByProbes
    group = Strategia

    title = Strategia: @strategy
    description = @strategy.description()
    synopsis = @strategy.synopsis()
    completedMessage = @strategy.completedMessage()

    agent = Strategia

    targetBody = @strategy.targetBody()

    autoAccept = true
    cancellable = false

    maxSimultaneous = 1

    prestige = Exceptional

    // Contract rewards
    advanceFunds = @strategy.advanceFunds() / ContractMultiplier()
    rewardFunds = @strategy.rewardFunds() / ContractMultiplier()
    rewardReputation = @strategy.rewardReputation() / ContractMultiplier()
    failureReputation = @strategy.failureReputation() / ContractMultiplier()
    failureFunds = @strategy.failureFunds() / ContractMultiplier()

    DATA
    {
        type = StrategiaStrategy
        requiredValue = true

        strategy = ActiveStrategies().Where(s => s.contractType() == @name).First()
    }

    DATA
    {
        type = List<CelestialBody>
        bodies = @strategy.bodies()
    }

    PARAMETER
    {
        type = VesselParameterGroup

        title = With the SAME vessel

        PARAMETER
        {
            type = AtLeast

            count = 3
            title = Flyby of THREE different planets

            PARAMETER
            {
                type = ReachState

                title = @targetBody.Name()

                disableOnStateChange = true
                hideChildren = true

                ITERATOR
                {
                    type = CelestialBody
                    targetBody = @/bodies
                }
            }
        }
    }

    PARAMETER
    {
        type = All

        title = (Optional) Moon Flybys
        optional = true

        PARAMETER
        {
            type = All

            title = @body.Name()

            ITERATOR
            {
                type = CelestialBody
                body = @/bodies.Where(cb => cb.Children().Count() > 0)
            }

            PARAMETER
            {
                type = ReachState

                title = @childBody.Name()
                targetBody = @childBody

                disableOnStateChange = true
                hideChildren = true

                ITERATOR
                {
                    type = CelestialBody
                    childBody = @../../body.Children()
                }

                rewardScience = 5 * @childBody.Multiplier() / (@../body.Children().Count() > 1 ? 2.0 : 1.0)
            }
        }
    }
}
